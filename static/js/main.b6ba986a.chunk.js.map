{"version":3,"sources":["Components/NavigationBar/NavigationBar.js","Components/App/App.js","index.js"],"names":["NavigationBar","App","useState","selectState","setSelectState","searchState","setSearchState","urlState","setUrlState","animeState","setAnimeState","useEffect","fetch","then","response","json","quotes","error","alert","catch","console","log","className","onSubmit","e","preventDefault","url","String","htmlFor","name","onChange","target","value","type","placeholder","map","quote","key","anime","character","ReactDom","render","document","getElementById"],"mappings":"oNAYeA,MARf,WACI,OACI,8BACI,iD,YCmHGC,MApHf,WAAgB,IAAD,EAE6BC,mBAAS,UAFtC,mBAEJC,EAFI,KAEUC,EAFV,OAG4BF,mBAAS,IAHrC,mBAGJG,EAHI,KAGUC,EAHV,OAIoBJ,mBAAS,IAJ7B,mBAINK,EAJM,KAIKC,EAJL,OAKwBN,mBAAS,IALjC,mBAKNO,EALM,KAKOC,EALP,KAoEX,OArBAC,qBAAU,WACU,KAAbJ,GACCC,EAAY,2CAGhBI,MAAML,GACLM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GACEA,EAAOC,MAIPC,MAAM,oCAHNR,EAAcM,MAOrBG,OAAM,SAACF,GAAD,OAAWG,QAAQC,IAAIJ,QAC9B,CAACV,IAKD,gCACI,cAAC,EAAD,IACA,uBAAMe,UAAU,OAAOC,SAvD/B,SAA2BC,GACvBA,EAAEC,iBAGFjB,EAAYD,EAAW,IACvBG,EAAcD,EAAa,IAE3B,IAAIiB,EAAM,0CAES,WAAhBvB,GAA4C,KAAhBE,IAC3BqB,EAAM,2CAIS,WAAhBvB,GAA4C,KAAhBE,GAKZ,UAAhBF,IACCuB,EAAMA,EAAM,gBAAkBC,OAAOtB,IAGtB,mBAAhBF,IACCuB,EAAMA,EAAM,mBAAqBC,OAAOtB,IAG5CG,EAAYkB,IAZRR,MAAM,0BAwCN,UACI,qBAAKI,UAAU,eAAf,SACI,uBAAOM,QAAQ,SAASN,UAAU,mBAAlC,0BAGJ,qBAAKA,UAAU,eAAf,SACI,yBAAQO,KAAK,QAAQP,UAAU,gBAAgBQ,SArE/D,SAA+BN,GAC3BpB,EAAeoB,EAAEO,OAAOC,QAoEZ,UACI,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,wBAIR,qBAAKV,UAAU,eAAf,SACI,uBAAOW,KAAK,OAAOX,UAAU,eAAeY,YAAY,YAAYJ,SAzEpF,SAA2BN,GACvBlB,EAAekB,EAAEO,OAAOC,YA2EhB,qBAAKV,UAAU,eAAf,SACI,wBAAQW,KAAM,SAASX,UAAU,eAAjC,yBAIR,uBAEA,yBAASA,UAAU,YAAnB,SAEQb,EAAW0B,KAAI,SAACC,EAAQC,GAAT,OACX,sBAAKf,UAAU,QAAf,UACI,0CAAac,EAAME,SACnB,8CAAiBF,EAAMG,aACvB,yCAAYH,EAAMA,WAHQC,Y,MCnGtDG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.b6ba986a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './NavigationBar.css';\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n        <nav>\r\n            <h1>Anime Quotes</h1>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React , { useState , useEffect } from 'react';\r\nimport NavigationBar from '../NavigationBar/NavigationBar.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n    \r\n    const [selectState , setSelectState ] = useState(\"Random\");\r\n    const [searchState , setSearchState] = useState(\"\");\r\n    var [urlState , setUrlState] = useState(\"\");\r\n    var [animeState , setAnimeState] = useState([]);\r\n\r\n\r\n    function handleSelectionChange(e){\r\n        setSelectState(e.target.value);\r\n    }\r\n\r\n    function handleInputChange(e){\r\n        setSearchState(e.target.value);\r\n    }\r\n\r\n    function handleClickChange(e) {\r\n        e.preventDefault();\r\n\r\n\r\n        setUrlState(urlState = \"\");\r\n        setAnimeState(animeState = []);\r\n        \r\n        var url = \"https://animechan.vercel.app/api/quotes\";\r\n\r\n        if(selectState === \"Random\" || searchState === \"\"){\r\n            url = \"https://animechan.vercel.app/api/quotes\";\r\n            \r\n        }\r\n\r\n        if(selectState !== \"Random\" && searchState === \"\"){\r\n            alert(\"Please Fill The Entry\");\r\n            return ;\r\n        }\r\n\r\n        if(selectState === \"Anime\"){\r\n            url = url + \"/anime?title=\" + String(searchState);\r\n        }\r\n\r\n        if(selectState === \"Character Name\"){\r\n            url = url + \"/character?name=\" + String(searchState);\r\n        }\r\n\r\n        setUrlState(url);\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if(urlState === \"\"){\r\n            setUrlState(\"https://animechan.vercel.app/api/quotes\");\r\n        }\r\n\r\n        fetch(urlState)\r\n        .then((response) => response.json())\r\n        .then(quotes => {\r\n            if(!quotes.error){\r\n                setAnimeState(quotes);\r\n            }\r\n            else{\r\n                alert('No result found please try again');\r\n\r\n            }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } , [urlState])\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <NavigationBar />\r\n            <form className=\"form\" onSubmit={handleClickChange} >\r\n                <div className=\"form-content\">\r\n                    <label htmlFor=\"Option\" className=\"input-group-text\">Sort By : </label>\r\n                </div>\r\n                \r\n                <div className=\"form-content\">\r\n                    <select name=\"anime\" className=\"custom-select\" onChange = {handleSelectionChange}>       \r\n                        <option value=\"Random\">Random</option>\r\n                        <option value=\"Character Name\">Character Name</option>\r\n                        <option value=\"Anime\">Anime</option>    \r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"form-content\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Type text\" onChange={handleInputChange}/>\r\n                </div>\r\n\r\n                <div className=\"form-content\">\r\n                    <button type= \"submit\" className=\"btn btn-dark\">Search</button>\r\n                </div>\r\n            </form>\r\n\r\n            <br/>\r\n\r\n            <section className=\"container\">\r\n                {\r\n                    animeState.map((quote , key) => \r\n                        <div className=\"items\" key = {key}>\r\n                            <h4>Anime : {quote.anime}</h4>\r\n                            <h6>Character : {quote.character}</h6>\r\n                            <p>Quote : {quote.quote}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            </section>\r\n\r\n\r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './Components/App/App.js';\r\nimport './style.css';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}